services:
  app:
    build:
      context: ./
      dockerfile: Presentation/Dockerfile
    container_name: app
    ports:
      - "5000:5000"   
    networks:
      - backend_network
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__bookingConnection=Host=postgres-booking;Port=5432;Database=BookingDb;Username=postgres;Password=1111
      - ConnectionStrings__userConnection=Host=postgres-user;Port=5432;Database=UserDb;Username=postgres;Password=1111
    depends_on:
      - postgres-booking
      - postgres-user
  
  postgres-booking:
    image: postgres:latest
    container_name: postgres-booking
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1111
      POSTGRES_DB: BookingDb
    ports:
      - "5433:5432"
    networks:
      - backend_network
    volumes:
      - postgres_data_bookings:/var/lib/postgresql/data
        
  postgres-user:
    image: postgres:latest
    container_name: postgres-user
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1111
      POSTGRES_DB: UserDb
    ports:
      - "5434:5432"
    networks:
      - backend_network
    volumes:
      - postgres_data_users:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres-booking
      - postgres-user
    networks:
      - backend_network

networks:
  backend_network:
    driver: bridge
    
volumes:
  postgres_data_bookings:
  postgres_data_users: